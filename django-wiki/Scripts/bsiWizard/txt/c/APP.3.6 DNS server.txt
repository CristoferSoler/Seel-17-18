[toc]
 
1 description
--------------

### 1.1 Introduction

This module considers the basic security features of the Domain Name System (DNS) and the servers required for this purpose. DNS is a network service that is used to transform host names of IT systems into IP addresses. Normally, a hostname is searched for the corresponding IP address (forward resolution). If, however, the IP address is known and the host name is searched, this is called backward resolution. DNS can be compared to a phonebook that resolves names not into phone numbers but into IP addresses. Which names belong to which IP addresses is managed in the domain namespace. This is hierarchical and is provided by DNS servers. DNS servers manage the domain name space on the Internet, but they are also often used in the institution's internal network. By default, so-called resolvers are installed on users' computers, which are used to make requests to DNS servers and return information about the domain namespace in response. The term DNS server literally stands for the software used, but is usually also used as a synonym for the computer on which this software is operated.

DNS servers can be distinguished according to their tasks, there are basically two different types: Advertising DNS server and Resolving DNS server. Advertising DNS servers are usually responsible for processing requests from the Internet. Resolving DNS servers, on the other hand, process requests from the internal network.

A failure of a DNS server can seriously affect the operation of an IT infrastructure. It is not directly the failed DNS system problematic, but the resulting restriction of DNS-based services. Under certain circumstances, web servers, e-mail servers are no longer available and the remote maintenance does not work anymore. As DNS is required by many networking applications, the specification (RFC 1034) requires at least two Authoritative DNS servers to operate on each zone.

### 1.2 Objective

This module describes the specific threats for a DNS server and the resulting requirements for safe operation.

### 1.3 Delimitation

This module contains basic requirements that must be observed and fulfilled when an institution operates DNS servers. The focus here is on the availability of DNS servers, the integrity of the information transmitted, and the problems that can arise when operating DNS servers. However, general and operating system-specific aspects of a server are not the subject of this module, but are described in the SYS1.1. * General server * and handled in the appropriate OS-specific building blocks of the IT systems layer, eg. SYS.1.3 * Unix server * or SYS.1.2.2 * Windows Server 2012 *.

2 risk situation
-----------------

The following specific threats and vulnerabilities are of particular importance to DNS servers:

### 2 1 DNS server failure

If a DNS server fails, the entire IT operation can be affected. Since clients and other servers of the institution are then no longer able to resolve internal and external addresses, data connections can no longer be established. Also external IT systems, eg. Mobile workers, customers, and business partners, for example, can not access the institution's servers, which typically disruptes critical business processes.

### 2 2 Insufficient line capacity
If the line capacities for a DNS server are insufficient, access times to internal and external services may increase. As a result, these may only be limited or no longer usable. Also, attackers can more easily overload the DNS server with a denial-of-service (DoS) attack.

### 2 3 Lack of or inadequate planning of DNS use

Planning errors often turn out to be particularly serious, since it is easy to create comprehensive security gaps. If the use of DNS is not or only insufficiently planned, this can lead to problems and security gaps during operation. For example, if the firewall rules are too liberally defined to allow DNS traffic on the network, it may allow an attack. However, if the rules are too restrictive, legitimate clients will not be able to make requests to the DNS servers and will be affected if they use services such as e-mail, FTP, or the like.

### 2 4 Bad domain information

Even if the DNS deployment has been carefully planned and thus all safety-relevant points have been considered, this is not sufficient if semantically and / or syntactically incorrect domain information is created. For example, if a hostname is assigned an incorrect IP address, data is missing, or unauthorized characters are used, or the forward and reverse resolutions are inconsistent. If domain information contains errors, services that use this information will be restricted due to misinformation.

### 2 5 Incorrect configuration of a DNS server

Security-critical defaults, self-configured security-critical settings, or bad configurations can cause a DNS server to malfunction. For example, if a Resolving DNS server is configured to accept recursive requests unrestricted, both from the internal LAN and the Internet, the server's availability may be severely affected by the increased load. In addition, it could make it vulnerable to DNS reflection attacks.

Similarly, in the case of incorrectly configured DNS servers, there is a risk that the zone transfers will not be restricted to authorized DNS servers. This allows any host who has the opportunity to submit a request to the DNS servers to read out the entire domain information of these servers. The data thus obtained can facilitate later attacks.

### 2 6 DNS manipulation

With a DNS cache poisoning attack, the target is tracked that the compromised machine stores incorrect mappings of IP addresses and names. It exploits the fact that DNS servers cached received domain information for a certain period of time in the cache. Fake data can spread that far. If corresponding queries are made to the manipulated DNS server, this will deliver the counterfeit data in response. The recipient of the response stores this between and his cache is thus also "poisoned". The stored data has a defined shelf life (Time-To-Live, TTL). If the Resolving DNS server is asked for a manipulated address, it will not request another DNS server until its expiration date. So it is possible that manipulated DNS information last long, even though they are already corrected on the originally attacked DNS server. If, for example, an attacker succeeds in taking over the name resolution for a domain by manipulating the entries in such a way that his DNS servers are interrogated, all subdomains are automatically affected. DNS cache poisoning attacks are often conducted with the goal of redirecting requests to malicious servers.

### 2 7 DNS hijacking
DNS hijacking is an attacking technique used to direct communication between Advertising DNS servers and resolvers through an attacker's IT system. The attacker can use this man-in-the-middle attack to intercept and record communication between servers. The far greater danger, however, is that a successful attacker can arbitrarily change any traffic between the two communication partners. If, after a successful DNS hijacking attack, a request is sent to a DNS server by the resolver of a client IT system, the attacker can, for example, change the assignment of name and IP address. DNS hijacking can also be combined with other attacks, especially phishing in this case.

### 2 8 DNS-DoS

In a DoS attack on a DNS server, so many requests are sent to it that the network connection to the DNS server or the DNS server itself is overloaded. As a rule, the requests are sent via botnets in order to achieve the necessary data rate. A DNS server overloaded in this way can no longer answer legitimate requests.

### 2 9 DNS Reflection

A DNS Reflection attack is a DoS attack that does not target the DNS server to which the requests are made, but the recipient of the replies. It is exploited that certain requests generate a relatively large amount of response data. It is possible to achieve a gain of 100 or more. This means that the response, measured in bytes, is at least 100 times larger than the request. Due to the number and size of the answers, the network bandwidth or the computer itself is overloaded beyond the power capacity. Thus, any technical IT component can be the target (see 2.8 * DNS-DoS *). DNS reflection attacks are favored by open resolvers.
